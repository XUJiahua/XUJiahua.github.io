<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Service Mesh on 许嘉华的笔记</title>
    <link>https://xujiahua.github.io/tags/service-mesh/</link>
    <description>Recent content in Service Mesh on 许嘉华的笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 21 Apr 2020 09:01:38 +0800</lastBuildDate>
    
	<atom:link href="https://xujiahua.github.io/tags/service-mesh/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>consul 小结</title>
      <link>https://xujiahua.github.io/posts/20200421-use-consul/</link>
      <pubDate>Tue, 21 Apr 2020 09:01:38 +0800</pubDate>
      
      <guid>https://xujiahua.github.io/posts/20200421-use-consul/</guid>
      <description>简单介绍 hashicorp 对 Consul 的定位是服务间网络方案。
 Consul is a service networking solution to connect and secure services across any runtime platform and public or private cloud. https://www.consul.io/
 官方的两个 use case 就是 service discovery, service mesh。
service discovery 与 etcd 比起来，Consul 的服务发现是开箱即用的。优点如下：
 First class 的服务注册和获取接口。不需要像 etcd 那样在 kv 存储基础上做包装。 服务注册，可以是consul 命令，也可以是HTTP API。 获取服务注册表，除了 HTTP 接口，还可以使用 DNS 查询接口。 健康检查。服务注册的时候可以提供健康检查项。健康检查机制保证了拿到的服务注册表是“健康”的。健康检查也包括节点的检查。单纯利用 consul 健康检查这个功能，consul 就是一个分布式监控工具。 Web 管理界面。节点、服务、健康与否一目了然。 Watch 功能。通过 blocking queries/ long-polling HTTP API 的方式得到服务注册表的改变的通知。 跨数据中心（取资源）。When a request is made for a resource in another datacenter, the local Consul servers forward an RPC request to the remote Consul servers for that resource and return the results.</description>
    </item>
    
  </channel>
</rss>