<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>性能测试 on 许嘉华的博客</title>
    <link>https://xujiahua.github.io/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/</link>
    <description>Recent content in 性能测试 on 许嘉华的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 17 Oct 2018 07:42:56 +0800</lastBuildDate>
    
	<atom:link href="https://xujiahua.github.io/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>一点压力测试的经验</title>
      <link>https://xujiahua.github.io/posts/20181017-perf-testing/</link>
      <pubDate>Wed, 17 Oct 2018 07:42:56 +0800</pubDate>
      
      <guid>https://xujiahua.github.io/posts/20181017-perf-testing/</guid>
      <description>（笔记迁移 @ 2020年）
一、概念，最基础最重要 1. 响应时间 TP99, TP90是什么 除了要看TPS，也要看请求的响应时间是否在合理的范围内。太离谱，压测该停了。
响应时间的指标有最大响应时间、平均响应时间、TPXXX等。
TP – Top Percentile
TP90 = 500ms ：90%的请求都是在500ms以内。
2. 错误率 压测过程中发现异常或是错误，或者，错误率明显上升，这时候压测就该停了。
3. 吞吐量 TPS 单纯看TPS是没有意义的。要结合上述两个指标，一般是0错误率，TP99在xxx ms（看具体应用场景）内的TPS。
比如这么描述TPS，TP99小于100ms的前提下，系统没有错误，系统可承载的TPS是1000。
4. 压测案例 选择生产环境中并发要求高的请求。
二、工具选型，选最合适的 工具的选择，一要看场景，二要看自己是否趁手。
ab (apache benchmark) ab -kc 1000 -n 10000 http://www.some-site.cc/tmp/index.html
 -k Enables HTTP keep-alive -c Number of concurrent requests -n Number of total requests to make  不足：
 只能使用单核。本身就可能是压测的瓶颈。 对于带多个步骤的压测场景无力。 没有（没找到）自定义断言的能力。  reference: https://en.wikipedia.org/wiki/ApacheBench
wrk wrk小巧，性能非常好，报告直观。
wrk -t2 -c100 -d30s -R2000 http://127.</description>
    </item>
    
  </channel>
</rss>