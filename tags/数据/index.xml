<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数据 on 许嘉华的笔记</title>
    <link>https://xujiahua.github.io/tags/%E6%95%B0%E6%8D%AE/</link>
    <description>Recent content in 数据 on 许嘉华的笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 24 Jul 2020 16:36:01 +0800</lastBuildDate><atom:link href="https://xujiahua.github.io/tags/%E6%95%B0%E6%8D%AE/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>关于业务系统数据化的思考</title>
      <link>https://xujiahua.github.io/posts/20200724-bizapp-data/</link>
      <pubDate>Fri, 24 Jul 2020 16:36:01 +0800</pubDate>
      
      <guid>https://xujiahua.github.io/posts/20200724-bizapp-data/</guid>
      <description>一个发券系统为例，该怎么发券。用 5W1H 分析法尝试提问：
 Why 理由：为什么发券，为了获益。比如激活沉睡用户来消费，比如无脑群发拉一波流量，用户来了就是赚了。为什么用这个系统发券，因为这个系统能问答如下的问题。 What 物品：优惠券，应该发放什么类型的优惠券。 When 时间：应该在什么时间点发放优惠券。 Where 地点：应该往哪个渠道发放优惠券。 Who 人物：应该向什么样的人群发放优惠券。  这些问题，需要软件用数据（统计数据）来回答，而不是靠参差不齐的运营人员主观臆断。
数据模型该怎么设计，先分析出这些问题中的实体是什么。
实体与实体画像 以实体为中心，及与其他实体的交互，构建实体的画像。实体之间互相接触，实体A产生关于实体B的画像（标签），比如用户画像有时间相关的标签。
优惠券、物品 构建物品画像。
一张优惠券的画像，相当于评定优惠券发放效果好坏的结论报告。
时间点 构建时间画像。
渠道 构建渠道画像。相当于评定发放渠道的效果好坏的结论报告。
用户属性 性别比例、城市分布。
用户 构建用户画像。
基础属性 比如微信授权给到的信息，性别、城市等。
物品属性 比如优惠券领取率，优惠券的核销率、优惠券类型偏好。
渠道属性 渠道偏好。
时间属性 各领取时间段统计、领取时间段偏好、核销时间段偏好。
开发画像 T + 1 统计即可，统计数据对差一天的数据并不敏感。
按照用户画像的常用套路：
 定义标签元数据。 竖表的方式开发新标签，新标签的开发通过增加开发者水平扩展。 根据标签元数据，将竖表转为横表。 加快多维度查询速度，可以使用ElasticSearch加速。  使用画像 基于标签元数据和每日生成的画像数据，可以，
精准投放 使用用户画像圈定人群。人群画像有时间偏好，选择发放时间，有渠道偏好，选择发放渠道，有优惠券偏好，选择优惠券类型。
或者换个方式，先选发放时间，根据时间画像，得知性别分布等，再筛选人群。
BI 可视化 各实体的可视化，各维度可筛选条件。
实体画像是用户画像的抽象，前端开发基于这种抽象开发，可适配不断新增的实体，减少重复劳动，免开发。
这就像一份知识库，作为运营人员的学习材料。比如时间的 BI 可视化，运营人员可学习到 xxx 时间段，是领取率最高的。
小结 一个发券系统，如何有别于其他产品。
 充分收集和保留数据。 利用数据。使用统计数据，就能让产品很不同。 去发掘新的实体，丰富画像。 如果可以，在数据基础上加入机器学习模型。  未完待续。</description>
    </item>
    
  </channel>
</rss>
